{"mappings":"gfACAA,EAAA,SAIAC,OAAOC,KAAK,CACVC,SAAU,eAGZ,IAAMC,EAAO,CACXC,SAAUC,SAASC,cAAc,gBACjCC,SAAUF,SAASC,cAAc,eACjCE,UAAWH,SAASC,cAAc,gBAClCG,YAAaJ,SAASC,cAAc,kBACpCI,YAAaL,SAASC,cAAc,mBAkFtC,SAASK,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAhFnCX,EAAKC,SAASW,UAAW,EAEzBC,UAAU,mBAAoB,CAC5BC,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,WAAY,YACZC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACN,IAAMC,EAAeD,EAAc,GAAGE,UACtC,GAAID,GAAgBJ,KAAKM,MAGvB,OAFAzB,EAAKC,SAASW,UAAW,OACzBc,OAAOC,MAAM,sCAIf,IAAIC,GAAW,EACXC,EAAa,KAEjB7B,EAAKC,SAASW,UAAW,EACzBZ,EAAKC,SAAS6B,iBAAiB,SAE/B,WACE,GAAIF,EAMF,OALA5B,EAAKI,SAAS2B,YAAc,KAC5B/B,EAAKK,UAAU0B,YAAc,KAC7B/B,EAAKM,YAAYyB,YAAc,KAC/B/B,EAAKO,YAAYwB,YAAc,UAC/BC,cAAcH,GAGdA,EAAaI,aAAY,WACvBL,GAAW,EACX,IAAMM,EAAcf,KAAKM,MACnBU,EAAYZ,EAAeW,EAEjC,GAAIC,EAAY,GAGd,OAFAH,cAAcH,QACdH,OAAOC,MAAM,0BAIf,IAA0CS,EAepD,SAAmBC,GAEjB,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOlC,EAAemC,KAAKC,MAAMP,EAAKI,IAEtCI,EAAQrC,EAAemC,KAAKC,MAAMP,EAAMI,EAAOD,IAE/CM,EAAUtC,EAAemC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,IAE1DQ,EAAUvC,EACdmC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,IAG9C,MAAO,CAAEI,OAAMG,QAAOC,UAASC,U,CAjCmBC,CAAUb,GAA5CO,EAAkCN,EAAlCM,KAAMG,EAA4BT,EAA5BS,MAAOC,EAAqBV,EAArBU,QAASC,EAAYX,EAAZW,QAE9B/C,EAAKI,SAAS2B,YAAc,GAAQkB,OAALP,GAC/B1C,EAAKK,UAAU0B,YAAc,GAASkB,OAANJ,GAChC7C,EAAKM,YAAYyB,YAAc,GAAWkB,OAARH,GAClC9C,EAAKO,YAAYwB,YAAc,GAAWkB,OAARF,E,GACjC,I","sources":["src/js/02-timer.js"],"sourcesContent":["// import flatpickr from \"flatpickr\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\n// import \"flatpickr/dist/flatpickr.min.css\";\n\nNotify.init({\n  position: \"center-top\",\n});\n\nconst refs = {\n  startBtn: document.querySelector(\"[data-start]\"),\n  dataDays: document.querySelector(\"[data-days]\"),\n  dataHours: document.querySelector(\"[data-hours]\"),\n  dataMinutes: document.querySelector(\"[data-minutes]\"),\n  dataSeconds: document.querySelector(\"[data-seconds]\"),\n};\n\nrefs.startBtn.disabled = true;\n\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  altInput: true,\n  time_24hr: true,\n  dateFormat: \"Y-m-d H:i\",\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0].getTime();\n    if (selectedDate <= Date.now()) {\n      refs.startBtn.disabled = true;\n      window.alert(\"Please choose a date in the future\");\n      return;\n    }\n\n    let isActive = false;\n    let intervalId = null;\n\n    refs.startBtn.disabled = false;\n    refs.startBtn.addEventListener(\"click\", onStartBtn);\n\n    function onStartBtn() {\n      if (isActive) {\n        refs.dataDays.textContent = \"00\";\n        refs.dataHours.textContent = \"00\";\n        refs.dataMinutes.textContent = \"00\";\n        refs.dataSeconds.textContent = \"00\";\n        clearInterval(intervalId);\n        return;\n      } else {\n        intervalId = setInterval(() => {\n          isActive = true;\n          const currentDate = Date.now();\n          const deltaTime = selectedDate - currentDate;\n\n          if (deltaTime < 10) {\n            clearInterval(intervalId);\n            window.alert(\"You've reached a goal!\");\n            return;\n          }\n\n          const { days, hours, minutes, seconds } = convertMs(deltaTime);\n\n          refs.dataDays.textContent = `${days}`;\n          refs.dataHours.textContent = `${hours}`;\n          refs.dataMinutes.textContent = `${minutes}`;\n          refs.dataSeconds.textContent = `${seconds}`;\n        }, 1000);\n      }\n    }\n  },\n});\n\n\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}"],"names":["parcelRequire","Notify","init","position","$84b9dae4df53835d$var$refs","startBtn","document","querySelector","dataDays","dataHours","dataMinutes","dataSeconds","$84b9dae4df53835d$var$addLeadingZero","value","String","padStart","disabled","flatpickr","enableTime","altInput","time_24hr","dateFormat","defaultDate","Date","minuteIncrement","onClose","selectedDates","selectedDate","getTime","now","window","alert","isActive","intervalId","addEventListener","textContent","clearInterval","setInterval","currentDate","deltaTime","ref","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$84b9dae4df53835d$var$convertMs","concat"],"version":3,"file":"02-timer.c4dd4b3b.js.map"}